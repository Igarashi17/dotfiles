#****************** .zshrc.osx *******************
# created: 2015/02/04
# Last Change:2015-Jul-15.
#************************************************************

# proxy 適用
source set_proxy_by_networksetup.sh

# for rbenv
if [ -d $HOME/.rbenv ]; then
    eval "$(rbenv init - --no-rehash)"
    # homebrew で入れた場合にはrbenv init -のみでOKのよう.
    # https://github.com/sstephenson/rbenv#understanding-path
    # rehashしないように変更
fi

# for matlab
if [ -d /applications/matlab_r2014a.app ]; then
    export PATH=/applications/matlab_r2014a.app/bin:$PATH
elif [ -d /applications/matlab_r2007b ]; then
    export PATH=/applications/matlab_r2007b/bin:$PATH
fi
# R2007b, OpenGL使用時にexport
# export DYLD_LIBRARY_PATH=/System/Library/Frameworks/JavaVM.framework/Libraries
# ただしbrew installでは悪さをする. 必要なければunset

# for tex
export PATH=/usr/texbin:$PATH
# for homebrew
export PATH=/usr/local/bin:$PATH

# for brew-cask
# シンボリックリンク作成先, caskroomのDirを変更
export HOMEBREW_CASK_OPTS="--appdir=/Applications --caskroom=/usr/local/Caskroom"

# secret key base
[ -f ~/.secret.nutfes14 ] && source ~/.secret.nutfes14

# for autojump
[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh

#-------------------------------------------------------#
# peco dfind
#-------------------------------------------------------# {{{
# http://qiita.com/ymorired/items/4b0d8e95786efc1378b4
function peco-dfind() {
    local current_buffer=$BUFFER
    # .git系など不可視フォルダは除外
    local selected_dir="$(find . -maxdepth 5 -type d ! -path "*/.*"| peco)"
    if [ -d "$selected_dir" ]; then
        BUFFER="${current_buffer} \"${selected_dir}\""
        CURSOR=$#BUFFER
        # ↓決定時にそのまま実行するなら
        #zle accept-line
    fi
    zle clear-screen
}
zle -N peco-dfind
bindkey '^j' peco-dfind
# }}}

#-------------------------------------------------------#
# peco-select-history
# http://qiita.com/wada811/items/78b14181a4de0fd5b497
#-------------------------------------------------------# {{{
function peco-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(history -n 1 | eval $tac | awk '!a[$0]++' | peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    # zle clear-screen
}
zle -N peco-select-history
# 履歴からコマンド選択
bindkey '^r' peco-select-history
# }}}
